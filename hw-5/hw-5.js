
//============================ #1 =================================================

// Написать функцию которая первым принимает значение, которым заполнять массив,
//     а вторым - сколько элементов должно быть в массиве.
//     Пример: arrayFill('x', 5) сделает массив ['x', 'x', 'x', 'x', 'x'].

// function arrayFill(a, b) {
//     let arr = []
// for (let i = 1; i <= b; i++){
//     arr.push(a)
// }
// return arr
// }
//
// console.log(arrayFill('Chlen', 4))

//================================== # 2 ===========================================
//
// Дан трехмерный массив с числами, например [[[1, 2], [3, 4]], [[5, 6], [7, 8]]].
//     Найдите сумму элементов этого массива. Массив, конечно же, может быть произвольным.

// let arr = [[[1, 2], [3, 4]], [[5, 6], [7, 8]]]
// let num = 0
// for (let i = 0; i < arr.length; i++){
//
//     for (let j = 0; j < arr[i].length; j++){
//
//         for (let k = 0; k < arr[i][j].length; k++){
//             num += arr[i][j][k]
//         }
//     }
// }
// console.log(num,'num')

//================================= # 3 =============================================

// Сделайте функцию isNumberInRange, которая параметром принимает число и проверяет,
//     что оно больше нуля и меньше 10. Если это так - пусть функция возвращает true, если не так - false.


// function isNumberInRange(a) {
//     if (a >= 0 && a <= 10) {
//         console.log(true)
//     }else {
//         console.log(false)
//     }
// }
// isNumberInRange()

//================================ # 4 ===============================================

// Сделайте функцию isEven() (even - это четный), которая параметром принимает
// целое число и проверяет: четное оно или нет. Если четное - пусть функция возвращает true, если нечетное - false.

// function isEven(a) {
//     if (a % 2 === 0){
//         return true
//     }else {
//         return false
//     }
// }
//
// console.log(isEven())

//================================ # 5 ===============================================

// Дан массив с целыми числами. Создайте из него новый массив,
//     где останутся лежать только четные из этих чисел. Для этого используйте вспомогательную функцию isEven из предыдущей задачи.

// let arr = [1,2,3,4,5,6,7,8,9]
// let evenArr = []
// for (let i = 0; i < arr.length; i++){
//     if (isEven(arr[i]) === true){
//         evenArr.push(arr[i])
//     }
// }
// console.log(evenArr)

//================================ # 6 ================================================

// Сделайте функцию getDivisors, которая параметром принимает число и
// возвращает массив его делителей (чисел, на которое делится данное число).


// function getDivisors(a) {
// let divArr = []
//     for (let i = 0; i <= a; i++){
//      if (a % i === 0){
//         divArr.push(i)
//      }
//     }
//      return divArr
// }
//
// console.log(getDivisors(10))

//============================= # 7 ======================================================

// Создайте функцию, которая получает два параметра – число и степень числа.
//     Используя ** внутри функции, возведите число в степень и выведите с помощью console.log.

// function multiply(a,b) {
//     return a ** b
// }
// console.log(multiply(5,3))

// ==================================== # 8, 9 (НАЙТИ ВТОРОЙ МЕТОД ||) ===============================================

// Функция принимает параметр - возраст пользователя.
//     Если число больше 16 – то выводим «добро пожаловать», если меньше – “вы еще молоды”.
//
//  Модифицируйте предыдущий пример – учтите вариант, если пользователь не передал параметр в функцию.
//     В таком случае выведите сообщение – “Введите возраст”.
// Реализуйте два вида проверки наличия аргумента – проверка на undefined и оператор ||.

// function age(a) {
//     if (a >= 16){
//     return alert('Добро пожаловать')
//      }else if (a === undefined){
//      return alert('Введите возраст')
//     }else if (a < 16) {
//     return alert('Вы еще молоды')
//     }
// }
//
// console.log(age())

//====================================== # 10 ==============================================

// Создайте функцию, которая считает длину массива и возвращает ее в виде числа.
//     Массив в функцию передается как аргумент. Если аргумент не задан – выводится сообщение об ошибке.

// function arrCount(a) {
//     if (a === undefined){
//         return 'Error. Please, enter array in argument'
//     }
//     return a.length
// }
//
// console.log(arrCount())

//===================================== # 11 ==============================================

// Пользователь вводит числа. Если число больше 10, то функция возвращает квадрат числа,
//     если меньше 7 – пишет, что число меньше 7. Если 8, 9 – то возвращает соответственно 7 или 8.
// Реализуйте решение с несколькими return.

// function countNum(a) {
//     if (a >= 10){
//         return console.log(a ** 2)
//     }else if (a < 7){
//         return console.log('Число меньше 7')
//     }else if (a === 8 || a === 9){
//         return console.log(a - 1)
//     }
//     }
//
// countNum()

//==================================== № 12 ==========================================

// Дана строка. Сделайте заглавным первый символ каждого слова этой строки.
//     Для этого сделайте вспомогательную функцию ucfirst, которая будет получать строку,
//     делать первый символ этой строки заглавным и возвращать обратно строку с заглавной первой буквой.

/* В первой функции не нужно ни с чем ебаться. Нужно протсо ввести строку в аргумент
функции (в данном примере консолю функцию и ввожу аргумент туда) и наслаждаться результатом.
 */
// function firstLetterToUpper (a) {
//     let arrayString = a.split('')
//     for (let i = 0; i < arrayString.length; i++) {
//         if (arrayString[i] === ' ') {
//             arrayString[i + 1] = arrayString[i + 1].toUpperCase()
//         } else if (i === 0) {
//             arrayString[0] = arrayString[0].toUpperCase()
//         }
//     }
//     a = arrayString.join('')
//     return a
// }
//  console.log(firstLetterToUpper('как дела у моего юного джоя? сегодня, я ходил в магазин!'))

//=======================================================================================

/* А вот вункция, которая получает в себя строку и возвращает строку с первой заглавной
буквой
 */

// function ucfirst(a) {
//     let word =  a.slice(0, 1).toUpperCase() + a.slice(1)
//     return word
// }
//
// /* ↓ Тут использование этой функции ↓ */
//
// let string = 'hello world, и смерть русне'
// let arrWords = string.split(' ')
// for (let i = 0; i < arrWords.length; i++){
//     arrWords [i] = ucfirst(arrWords[i])
// }
// string = arrWords.join(' ')
// console.log(string)

//============================= # 13 ================================================

// Дана строка вида 'var_text_hello'. Сделайте из него текст 'varTextHello'. ( с помощью функции, которая принимает строку)


// let string = 'var_text_hello'
// let arrWords = string.split('_')
// for (let i = 1; i < arrWords.length; i++){
//     arrWords [i] = ucfirst(arrWords[i])
// }
// string = arrWords.join('')
// console.log(string)

//================================== #14 ===========================================

// Сделайте функцию inArray, которая определяет, есть в массиве элемент с заданным текстом или нет.
//     Функция первым параметром должна принимать текст элемента, а вторым - массив,
//     в котором делается поиск. Функция должна возвращать true или false.

// function findElInArr(a,b) {
//     b = b.find(el => el === a)
//     let check = b === a
//     return console.log(check)
// }
// findElInArr('ded',['papa', 'mama', 'sestra', 'ded'])

//=================================== # 15 ==========================================

// Дана строка, например, '123456'. Сделайте из нее '214365'.

// let numInString = '123456'
// numInString = numInString.split('')
// for (let i = 0 ; i < numInString.length; i++) {
//
//     if (i % 2 === 0) {
//     let delEl1 = +numInString.splice(i,1)
//         delEl1 += 1
//         numInString.splice(i,0,delEl1)
//
//     }else {
//         let delEl2 = +numInString.splice(i,1)
//             delEl2 -= 1
//         numInString.splice(i,0,delEl2)
//     }
// }
// numInString=numInString.join('')
//
// console.log(numInString,'numInString after code')

//================= Method # 2 ==================================

// let numInString = '123456'
// numInString = numInString.split('')
// for (let i = 0; i < numInString.length; i += 2){
//     [numInString[i], numInString[i + 1]] = [numInString[i + 1], numInString [i]]
// }
// numInString = numInString.join('')
// console.log(numInString,'numInString')

//=================================== # 16 ============================================

// Напиши функцию создания генератора sequence(start, step). Она при вызове возвращает другую функцию-генератор,
//     которая при каждом вызове дает число на 1 больше, и так до бесконечности.
//     Начальное число, с которого начинать отсчет, и шаг, задается при создании генератора.
//     Шаг можно не указывать, тогда он будет равен одному.
//     Начальное значение по умолчанию равно 0. Генераторов можно создать сколько угодно.

// function sequence(start = 0, step = 1) {
//     let sum = start
//
//     return function() {
//         sum += step
//         return console.log(sum)
//     }
// }
// const firstInitialise = sequence(4, 4)
// firstInitialise()

//===================================== # 17 ===========================================

// Также, нужна функция take(gen, x)
// которая вызывает функцию gen заданное число (x)
// раз и возвращает массив с результатами вызовов. (первый аргумент ето наша функция генератор с 16 задачи, второй кол-во раз для вызова )


function gen(start = 0, step = 1) {
    let sum = start

    return function() {
        sum += step
        return sum
    }
}
const firstInitialise = gen(0,2)
//
//
// function take(gen = firstInitialise, x = 0) {
// let arrResult = []
//     for (let i = 0; i < x; i++){
//         arrResult.push(firstInitialise())
//     }
//     return console.log(arrResult)
// }
// take(firstInitialise, 6)

// //=================================== # 18 ==========================================

// Напиши функцию map(fn, array), которая принимает на вход функцию и массив,
//     и обрабатывает каждый элемент массива этой функцией, возвращая новый массив.

function multiply(a) {
    return a * 2
}
//
// function map(fn, array) {
//     array = array.map(el => fn(el))
//     return console.log(array)
// }
// map(multiply,[1,2,3,4,5,6])

//====================================== # 19 ===========================================

// Напиши функцию fmap(a, gen), которая принимает на вход 2 функции, a и gen,
//     где gen — функция-генератор вроде той, что была в 17 задании.
//     fmap возвращает новую функцию-генератор,
//     которая при каждом вызове берет следующее значение из gen и пропускает его через функцию a.

function fmap(a, b) {
    return function () {
        return console.log(a(b()))
    }
}
const thirdInitialize = fmap(multiply,firstInitialise)
thirdInitialize()