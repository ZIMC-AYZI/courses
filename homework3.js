// 1. Вывести числа от 4 до 400 на экран.

// const arr = [];
// for (let i = 4; i <=400; i++) {
//     arr.push(i);
// }
// console.log (arr);


// 2. Вывести числа в последовательности: 4 7 10 13 с помощью цикла.

// const arr =[];
// for (let i = 1; i <13; i) {
//     i = i+3;
//     arr.push(i);
// }
// console.log (arr);



// 3. Вывести числа 654 653 652 до нуля.

// const arr =[];
// for (let i = 0; i <655; i++) {
//    arr.push (i);
// }
// arr.reverse ();
// console.log (arr);

// 4. Вывести все годы с 1983 до 2017.

// const yearArr =[];
// for (let i = 1983; i <2018; i++) {
//     yearArr.push (i);
// }
// console.log (yearArr);


// 5. Вывести числа -4 -2 0 2 4 6 ...100.

// const numberArr = [];
// for (let i = -6; i <100; i) {
//     i = i+2;
//     numberArr.push(i);
// }
// console.log (numberArr);



// 6. С помощью цикла напечатайте таблицу умножения на 7 от 1 до 9.

// const arr =[];
//
// for (let i = 1; i <=9; i++) {
//
//  const j = i*7;
//     arr.push(`7*${i} = ${j}`);
// }
// console.log(arr);

// const multiplicationTable = [];
// for (let i = 1; i <= 10; i++) {
//     for (j = 7;j < 8; j++) {
//
//         let x = j*i;
//         multiplicationTable.push( ${j}*${i}=${x} );
//     }
//
// }
//
// alert(multiplicationTable);


// 7*. Найти сумму чисел от 0 до 100 (включительно). (0+1+2+3+4+5)

// let banka = 0;
//  for (let i = 0; i <= 100; i++) {
//      banka = i + banka;
//
//  }
//  console.log (banka);

// 8*. С помощью цикла вывести произведение чисел от 1 до 50. ( 0 умноженный на 1 ,

// let number = 1;
// for (let i = 1; i <=50; i++) {
// number = i * number;
// }
// console.log (number);


//     ето число умноженное на 2, это число умноженное на 3 и т.д)
// 9*.  Заполните массив следующим образом: в первый элемент запишите 'x',
//     во второй 'xx', в третий 'xxx' и так далее. Длину массива вводить через prompt.

// const massive = +prompt ('Введите длину массива');
// const arr = [];
// let x = '';
//     for (let i = 1; i <=massive; i++) {
//         x +='x';
//         arr.push (x);
//
//     }
//     console.log (arr);




// 10*.  Заполните массив следующим образом: в первый элемент запишите '1',
//     во второй '22', в третий '333' и так далее. Длину массива вводить через prompt.

// const massive = +prompt ('Введите длину массива!');
// const arr =[];
//
//
// for (let i = 1; i <= massive; i++) {
//    let x ='';
//     for (let j = 1; j <= i; j++) {
//          x += i;
//     }
//     arr.push (x);
//
// }
// console.log(arr);



// 11*. Дан массив с числами. Узнайте сколько элементов с начала массива надо сложить, чтобы в сумме получилось больше 10-ти.
//     let array = [1, 2, 3, 4, 5];

// let arr = [1, 2, 3, 4, 5];
// let x = 0;
//
// for (let i = 0; i <=arr.length; i++) {
//   x += arr[i];
//    if (x>10 && x <=11 +arr[i]) {
//        alert (`Для суммы больше 10 нужно ${ i + 1 } первых элементов массива`)
//    }
// }
//
// 12*. Дан массив [1, 2, 3, 4, 5, 6]. Сделать из него массив [2, 1, 4, 3, 6, 5]

let arr = [ 1, 2, 3, 4, 5, 6];
for ( let i = 0; i <= arr.length; i+=2) {
  let x = arr[i];
  let y = arr[i+1];aa


}

console.log(arr);






// 13*. Дан массив [1, 2, 3, 4, 5, 6]. Сделать из него массив [5, 6, 3, 4, 1, 2]
// 14*. Дан двухмерный массив с числами, [[1, 2, 3], [4, 5], [6]]. Найдите сумму
// элементов этого массива.
// 15* Написать функцию которая принимает в себя строку ( пример : 'Hello word' ) , функция должна вернуть фразу
// наоборот ( пример : 'drow olleH')
//
// 15*. нарисовать матрицу x должны быть по краям, 0 в центре. ( длина и высота матрицы не меньше 10 )
// ['x', 'x', 'x', 'x', 'x' 'x', 'x']
//     ['x', 0, 0, 0, 0, 0, 0, 0, 0, 'x']
//     ['x', 0, 0, 0, 0, 0, 0, 0, 0, 'x']
//     ['x', 0, 0, 0, 0, 0, 0, 0, 0, 'x']
//     ['x', 0, 0, 0, 0, 0, 0, 0, 0, 'x']
//     ['x', 0, 0, 0, 0, 0, 0, 0, 0, 'x']
//     ['x', 0, 0, 0, 0, 0, 0, 0, 0, 'x']
//     ['x', 0, 0, 0, 0, 0, 0, 0, 0, 'x']
//     ['x', 0, 0, 0, 0, 0, 0, 0, 0, 'x']
//     ['x', 'x', 'x', 'x', 'x', 'x','x']
//
// 16*. нарисовать матрицу (таблица умножения)
// 0: (10) [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
// 1: (10) [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]
// 2: (10) [3, 6, 9, 12, 15, 18, 21, 24, 27, 30]
// 3: (10) [4, 8, 12, 16, 20, 24, 28, 32, 36, 40]
// 4: (10) [5, 10, 15, 20, 25, 30, 35, 40, 45, 50]
// 5: (10) [6, 12, 18, 24, 30, 36, 42, 48, 54, 60]
// 6: (10) [7, 14, 21, 28, 35, 42, 49, 56, 63, 70]
// 7: (10) [8, 16, 24, 32, 40, 48, 56, 64, 72, 80]
// 8: (10) [9, 18, 27, 36, 45, 54, 63, 72, 81, 90]
// 9: (10) [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]


